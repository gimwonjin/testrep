{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub1\\\\react\\\\05-react_starter\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  return _s(function App() {\n    _s();\n    const [count, setCount] = useState(0);\n    const [inputValue, setInputValue] = useState(\"\");\n    // console.log(\"App 컴포넌트 렌더링..\");\n    const handleClick = () => {\n      setCount(count + 1);\n    };\n    const handleChange = e => {\n      setInputValue(e.target.value);\n    };\n    useEffect(() => {\n      console.log(\"나는 화면이 최초 렌더링될 때 실행되는 uef야.\");\n    }, []); // [](디펜던시 리스트) 안에는 react 가 무엇을 지켜볼 지 작성해준다.\n    useEffect(() => {\n      console.log(\"나는 count가 변경될 때 실행되는 uef야.\");\n    }, [count]);\n    useEffect(() => {\n      console.log(\"나는 inputValue가 변경될 때 실행되는 uef야.\");\n    }, [inputValue]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search here\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uC785\\uB825\\uD55C \\uAC12 : \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cleanup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }, \"3iWwGyrCgsMwky4qzTC6Y3vM2wY=\");\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","$RefreshSig$","count","setCount","inputValue","setInputValue","handleClick","handleChange","e","target","value","console","log","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Cleanup","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub1/react/05-react_starter/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  return function App() {\n    const [count, setCount] = useState(0);\n    const [inputValue, setInputValue] = useState(\"\");\n    // console.log(\"App 컴포넌트 렌더링..\");\n    const handleClick = () => {\n      setCount(count + 1);\n    };\n    const handleChange = (e) => {\n      setInputValue(e.target.value);\n    };\n    useEffect(() => {\n      console.log(\"나는 화면이 최초 렌더링될 때 실행되는 uef야.\");\n    }, []); // [](디펜던시 리스트) 안에는 react 가 무엇을 지켜볼 지 작성해준다.\n    useEffect(() => {\n      console.log(\"나는 count가 변경될 때 실행되는 uef야.\");\n    }, [count]);\n    useEffect(() => {\n      console.log(\"나는 inputValue가 변경될 때 실행되는 uef야.\");\n    }, [inputValue]);\n\n    return (\n      <>\n        <input type=\"text\" placeholder=\"Search here\" onChange={handleChange} />\n        <h2>입력한 값 : {inputValue}</h2>\n        <h1>{count}</h1>\n        <button onClick={handleClick}>Click me</button>\n        <hr />\n        <Cleanup />\n        <hr />\n      </>\n    );\n  };\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,OAAAD,EAAA,CAAO,SAASD,GAAGA,CAAA,EAAG;IAAAC,EAAA;IACpB,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;IACrC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;IAChD;IACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;MACxBH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,MAAMK,YAAY,GAAIC,CAAC,IAAK;MAC1BH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/B,CAAC;IACDjB,SAAS,CAAC,MAAM;MACdkB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACRnB,SAAS,CAAC,MAAM;MACdkB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;IACXT,SAAS,CAAC,MAAM;MACdkB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;IAEhB,oBACER,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAOkB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,aAAa;QAACC,QAAQ,EAAET;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvExB,OAAA;QAAAiB,QAAA,GAAI,8BAAQ,EAACT,UAAU;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BxB,OAAA;QAAAiB,QAAA,EAAKX;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBxB,OAAA;QAAQyB,OAAO,EAAEf,WAAY;QAAAO,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CxB,OAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNxB,OAAA,CAAC0B,OAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXxB,OAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eACN,CAAC;EAEP,CAAC;AACH;AAACG,EAAA,GAjCQxB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}